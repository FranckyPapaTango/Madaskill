entity Post {
    title String required,
    body String,
    urlPicture String,
    categorie String,
    resumee String,
    auteur String,
    datePersistence Instant required,
    dateUpdate Instant
}

entity Product {
    name String required,
    shippable Boolean,
    description String required,
    livemode Boolean,
    price Double required,
    currencyFormat String required,
    taxeAmount Double required,
    linkToGenericPhotoFile String required,
    availableSizes String,
    categorie String,
    datePersistence Instant required,
    dateUpdate Instant
}


entity ApplicationUser {
    phoneNumber String required,
    email String,
    libelleAdresse String,
    villeTown String,
    paysCountry String required
}

entity Customer {
    id String required,
    object String,
    name String required,
    lastName String required,
    address String,
    zipCode String,
    country String required,
    email String,
    phone String required,
    datePersistence Instant required,
    dateUpdate Instant
}


entity Photo {
    title String required,
    linkToPhotoFile String required,
    description String,
    author String,
    owner String required,
    height Integer,
    width Integer,
    taken Instant required,
    uploaded Instant
}



entity Invoice {
    id String,
    object String,
    isPayedIsFacture Boolean required,
    amountPaid Long required,
    transportCosts Double required,
    application String,
    invoicePdf String,
    livemode Boolean,
    tax Double required,
    datePersistence Instant required,
    dateUpdate Instant
}

entity LineItem {
    id String,
    object String,
    quantity Integer required
}



relationship OneToMany {
    Post{photos} to Photo{post},
    Product{photos} to Photo{product}
    Invoice{lineItem} to LineItem{invoice},
    ApplicationUser{post} to Post{user},
    ApplicationUser{product} to Product{user},

    Customer{invoice} to Invoice{customer}

}

relationship OneToOne {
    ApplicationUser{internalUser} to User with builtInEntity,
    LineItem{product} to Product{lineItem},

}

// Set pagination options
// paginate JobHistory, Employee with infinite-scroll
paginate Post, Product, Customer, Photo, Invoice, LineItem, ApplicationUser with pagination

// Use Data Transfer Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
//  Ex√©cutez la commande suivante pour importer le projet JDL dans JHipster :
//    jhipster import-jdl madaskill.jdl
